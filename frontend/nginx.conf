# server {
#     listen 80;
#     server_name localhost;

#     location / {
#         # 防止缓存 HTML 文件
#         if ($request_filename ~* .*\.(?:htm|html)$) {
#             add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
#             access_log on;
#         }
#         root /srv/www;
#         index index.html index.htm;
#     }
# }

server {
    listen 80;
    server_name localhost;

    # 根目录访问处理
    location / {
        # 防止缓存 HTML 文件
        if ($request_filename ~* .*\.(?:htm|html)$) {
            add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
            access_log on;
        }
        root /srv/www;
        index index.html index.htm;
    }

    # 代理 medicModel 请求到指定目标服务
    location /medicModel/ {
        proxy_pass http://frp.jmdyz.top:30082/;  # Ollama API 服务地址
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # rewrite ^/medicModel/(.*)$ /$1 break;  # 重写路径

        # 设置 Origin 请求头
        # proxy_set_header Origin "http://frp.jmdyz.top:30082";  # 根据实际情况修改
        proxy_set_header Origin '';
        proxy_set_header Referer '';

        # # 处理 CORS 响应头
        # add_header 'Access-Control-Allow-Origin' '*' always;
        # add_header 'Access-Control-Allow-Credentials' 'true' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        # add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;

        # # 处理预检请求
        # if ($request_method = 'OPTIONS') {
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Credentials' 'true' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
        #     return 204;
        # }
    }

    # 代理 /api 请求到本地服务
    location /api/ {
        proxy_pass http://models:8000;  # 本地服务地址
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        rewrite ^/api/(.*)$ /$1 break;  # 重写路径
    }
}
